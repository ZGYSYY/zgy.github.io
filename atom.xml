<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我不是老司机</title>
  
  <subtitle>I am not an old driver ! </subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zgysyy.github.io/"/>
  <updated>2020-03-19T04:41:23.708Z</updated>
  <id>https://zgysyy.github.io/</id>
  
  <author>
    <name>ZGY</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小甲鱼汇编学习笔记</title>
    <link href="https://zgysyy.github.io/2020/03/19/%E5%B0%8F%E7%94%B2%E9%B1%BC%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://zgysyy.github.io/2020/03/19/%E5%B0%8F%E7%94%B2%E9%B1%BC%E6%B1%87%E7%BC%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-03-19T04:12:58.000Z</published>
    <updated>2020-03-19T04:41:23.708Z</updated>
    
    <summary type="html">
    
      &lt;center&gt;&lt;h1&gt;day01（2020年2月28日）&lt;/h1&gt;&lt;/center&gt;

&lt;h1 id=&quot;视频01&quot;&gt;&lt;a href=&quot;#视频01&quot; class=&quot;headerlink&quot; title=&quot;视频01&quot;&gt;&lt;/a&gt;视频01&lt;/h1&gt;&lt;p&gt;1、汇编语言的主体是汇编指令。&lt;br&gt;2、汇编指令和机器指令的差别在于指令的表示方法上。汇编指令是机器指令便于记忆的书写格式，汇编指令是机器指令的助记符。&lt;br&gt;3、寄存器，寄存器是cpu中可以存储数据的器件，相当于嵌入到cpu中的内存，处理数据的速度仅次于cpu。一个cpu中有很多个寄存器，AX是其中一个寄存器的代号，BX也是其中一个寄存器的代号。&lt;br&gt;4、查看某个软件的汇编指令工具可以使用Ollydbg软件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="汇编" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/%E6%B1%87%E7%BC%96/"/>
    
    
      <category term="汇编" scheme="https://zgysyy.github.io/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 整合使用WebSocket</title>
    <link href="https://zgysyy.github.io/2020/01/15/Spring-Boot-%E6%95%B4%E5%90%88%E4%BD%BF%E7%94%A8WebSocket/"/>
    <id>https://zgysyy.github.io/2020/01/15/Spring-Boot-%E6%95%B4%E5%90%88%E4%BD%BF%E7%94%A8WebSocket/</id>
    <published>2020-01-15T09:35:58.000Z</published>
    <updated>2020-02-10T03:41:11.782Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;使用 websocket 有两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;是使用 sockjs。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;是使用 h5 的标准。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用 Html5 标准自然更方便简单，所以记录的是配合 h5 的使用方法。&lt;/p&gt;
&lt;h1 id=&quot;1、pom&quot;&gt;&lt;a href=&quot;#1、pom&quot; class=&quot;headerlink&quot; title=&quot;1、pom&quot;&gt;&lt;/a&gt;1、pom&lt;/h1&gt;&lt;p&gt;核心是 &lt;code&gt;@ServerEndpoint&lt;/code&gt; 这个注解。这个注解是 Javaee 标准里的注解，tomcat7 以上已经对其进行了实现，如果是用传统方法使用 tomcat 发布项目，只要在 pom 文件中引入 javaee 标准即可使用。&lt;/p&gt;
&lt;figure class=&quot;hljs highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;javax&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;javaee-api&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;7.0&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;provided&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;但使用 springboot 的内置 tomcat 时，就不需要引入javaee-api了，spring-boot 已经包含了。使用 springboot的websocket 功能首先引入 springboot 组件。&lt;/p&gt;
&lt;figure class=&quot;hljs highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs xml&quot;&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-websocket&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;     &lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.3.5.RELEASE&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-tag&quot;&gt;&amp;lt;/&lt;span class=&quot;hljs-name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;顺便说一句，springboot 的高级组件会自动引用基础的组件，像 spring-boot-starter-websocket 就引入了 spring-boot-starter-web 和 spring-boot-starter，所以不要重复引入。&lt;/p&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Java" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/Java/"/>
    
    
      <category term="SpringBoot" scheme="https://zgysyy.github.io/tags/SpringBoot/"/>
    
      <category term="WebSocket" scheme="https://zgysyy.github.io/tags/WebSocket/"/>
    
  </entry>
  
  <entry>
    <title>MySQL锁知识点总结</title>
    <link href="https://zgysyy.github.io/2020/01/15/MySQL%E9%94%81%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>https://zgysyy.github.io/2020/01/15/MySQL%E9%94%81%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</id>
    <published>2020-01-15T06:27:46.000Z</published>
    <updated>2020-02-10T03:41:11.766Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-什么是锁&quot;&gt;&lt;a href=&quot;#1-什么是锁&quot; class=&quot;headerlink&quot; title=&quot;1 什么是锁&quot;&gt;&lt;/a&gt;1 什么是锁&lt;/h1&gt;&lt;h2 id=&quot;1-1-锁的概述&quot;&gt;&lt;a href=&quot;#1-1-锁的概述&quot; class=&quot;headerlink&quot; title=&quot;1.1 锁的概述&quot;&gt;&lt;/a&gt;1.1 锁的概述&lt;/h2&gt;&lt;p&gt;在生活中锁的例子多的不能再多了，从古老的简单的门锁，到密码锁，再到现在的指纹解锁，人脸识别锁，这都是锁的鲜明的例子，所以，我们理解锁应该是非常简单的。&lt;/p&gt;
&lt;p&gt;再到MySQL中的锁，对于MySQL来说，锁是一个很重要的特性，数据库的锁是为了支持对共享资源进行并发访问，提供数据的完整性和一致性，这样才能保证在高并发的情况下，访问数据库的时候，数据不会出现问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="数据库" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="https://zgysyy.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Git使用教程</title>
    <link href="https://zgysyy.github.io/2020/01/15/Git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>https://zgysyy.github.io/2020/01/15/Git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</id>
    <published>2020-01-15T03:14:12.000Z</published>
    <updated>2020-02-10T03:41:11.642Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Git是什么？&quot;&gt;&lt;a href=&quot;#Git是什么？&quot; class=&quot;headerlink&quot; title=&quot;Git是什么？&quot;&gt;&lt;/a&gt;Git是什么？&lt;/h1&gt;&lt;p&gt;Git是目前世界上最先进的分布式版本控制系统。&lt;br&gt;工作原理 / 流程：&lt;/p&gt;
&lt;img src=&quot;/2020/01/15/Git%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/640.webp&quot; class=&quot;&quot;&gt;

&lt;ul&gt;
&lt;li&gt;Workspace：工作区&lt;/li&gt;
&lt;li&gt;Index / Stage：暂存区&lt;/li&gt;
&lt;li&gt;Repository：仓库区（或本地仓库）&lt;/li&gt;
&lt;li&gt;Remote：远程仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;SVN与Git的最主要的区别？&quot;&gt;&lt;a href=&quot;#SVN与Git的最主要的区别？&quot; class=&quot;headerlink&quot; title=&quot;SVN与Git的最主要的区别？&quot;&gt;&lt;/a&gt;SVN与Git的最主要的区别？&lt;/h1&gt;&lt;p&gt;SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器哪里得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就纳闷了。&lt;/p&gt;
&lt;p&gt;Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="版本控制" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
      <category term="Git" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/Git/"/>
    
    
      <category term="Git" scheme="https://zgysyy.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Java 中使用 Zookeeper 客户端 Curator 详解</title>
    <link href="https://zgysyy.github.io/2020/01/08/Java-%E4%B8%AD%E4%BD%BF%E7%94%A8-Zookeeper-%E5%AE%A2%E6%88%B7%E7%AB%AF-Curator-%E8%AF%A6%E8%A7%A3/"/>
    <id>https://zgysyy.github.io/2020/01/08/Java-%E4%B8%AD%E4%BD%BF%E7%94%A8-Zookeeper-%E5%AE%A2%E6%88%B7%E7%AB%AF-Curator-%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-01-08T11:46:55.000Z</published>
    <updated>2020-01-08T13:14:20.026Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;因为最近项目需要使用Zookeeper这个中间件，提前了解一下它的客户端Curator的使用。&lt;/p&gt;
&lt;p&gt;Curator是Netflix公司开源的一套zookeeper客户端框架，解决了很多Zookeeper客户端非常底层的细节开发工作，包括连接重连、反复注册Watcher和NodeExistsException异常等等。Patrixck Hunt（Zookeeper）以一句“Guava is to Java that Curator to Zookeeper”给Curator予高度评价。&lt;/p&gt;
&lt;p&gt;Curator无疑是Zookeeper客户端中的瑞士军刀，它译作”馆长”或者’’管理者’’，不知道是不是开发小组有意而为之，笔者猜测有可能这样命名的原因是说明Curator就是Zookeeper的馆长(脑洞有点大：Curator就是动物园的园长)。&lt;br&gt;Curator包含了几个包：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;curator-framework：对zookeeper的底层api的一些封装。&lt;/li&gt;
&lt;li&gt;curator-client：提供一些客户端的操作，例如重试策略等。&lt;/li&gt;
&lt;li&gt;curator-recipes：封装了一些高级特性，如：Cache事件监听、选举、分布式锁、分布式计数器、分布式Barrier等。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Java" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/Java/"/>
    
      <category term="Zookeeper" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/Java/Zookeeper/"/>
    
    
      <category term="Zookeeper" scheme="https://zgysyy.github.io/tags/Zookeeper/"/>
    
      <category term="分布式锁" scheme="https://zgysyy.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
    
  </entry>
  
  <entry>
    <title>ZooKeeper详解（一）</title>
    <link href="https://zgysyy.github.io/2020/01/03/ZooKeeper%E8%AF%A6%E8%A7%A3%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://zgysyy.github.io/2020/01/03/ZooKeeper%E8%AF%A6%E8%A7%A3%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-01-03T05:45:58.000Z</published>
    <updated>2020-01-08T11:41:26.294Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;作为分布式系统解决方案的 ZooKeeper，被广泛应用于多个分布式场景。例如：数据发布/订阅，负载均衡，命名服务，集群管理等等。&lt;br&gt;因此，ZooKeeper 在分布式系统中扮演着重要的角色，今天通过一个简单的例子来看看它的实现原理。&lt;/p&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Java" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/Java/"/>
    
      <category term="Zookeeper" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/Java/Zookeeper/"/>
    
    
      <category term="Zookeeper" scheme="https://zgysyy.github.io/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>MySql 笔记</title>
    <link href="https://zgysyy.github.io/2020/01/03/MySql-%E7%AC%94%E8%AE%B0/"/>
    <id>https://zgysyy.github.io/2020/01/03/MySql-%E7%AC%94%E8%AE%B0/</id>
    <published>2020-01-03T05:42:16.000Z</published>
    <updated>2020-02-10T03:41:11.781Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;创建用户&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;hljs highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&#39;username&#39;&lt;/span&gt;@&lt;span class=&quot;hljs-string&quot;&gt;&#39;localhost&#39;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;IDENTIFIED&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&#39;password&#39;&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;创建数据库&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;hljs highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;DATABASE&lt;/span&gt; 数据库名称; 或者 &lt;span class=&quot;hljs-keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;SCHEMA&lt;/span&gt; 数据库名称;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;授权&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;hljs highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;PRIVILEGES&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;ON&lt;/span&gt; 数据库名称.* &lt;span class=&quot;hljs-keyword&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&#39;username&#39;&lt;/span&gt;@&lt;span class=&quot;hljs-string&quot;&gt;&#39;localhost&#39;&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;删除用户&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;hljs highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs sql&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&#39;usernaem&#39;&lt;/span&gt;@&lt;span class=&quot;hljs-string&quot;&gt;&#39;localhost&#39;&lt;/span&gt;;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="数据库" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="https://zgysyy.github.io/tags/MySQL/"/>
    
      <category term="数据库" scheme="https://zgysyy.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Windows常用命令</title>
    <link href="https://zgysyy.github.io/2020/01/03/Windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://zgysyy.github.io/2020/01/03/Windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-01-03T04:10:29.000Z</published>
    <updated>2020-01-08T11:41:26.292Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;拷贝文件并排除某些文件&quot;&gt;&lt;a href=&quot;#拷贝文件并排除某些文件&quot; class=&quot;headerlink&quot; title=&quot;拷贝文件并排除某些文件&quot;&gt;&lt;/a&gt;拷贝文件并排除某些文件&lt;/h1&gt;&lt;p&gt;语法：xcopy 源目录 目标目录 参数&lt;/p&gt;
&lt;figure class=&quot;hljs highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs cmd&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;xcopy&lt;/span&gt; .\my-shop D:\Temp\my-shop /Y /E /H /EXCLUDE:EXCLUDE.txt&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="系统" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Windows" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/%E7%B3%BB%E7%BB%9F/Windows/"/>
    
    
      <category term="Windows" scheme="https://zgysyy.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Docker搭建JavaWeb环境</title>
    <link href="https://zgysyy.github.io/2020/01/03/Docker%E6%90%AD%E5%BB%BAJavaWeb%E7%8E%AF%E5%A2%83/"/>
    <id>https://zgysyy.github.io/2020/01/03/Docker%E6%90%AD%E5%BB%BAJavaWeb%E7%8E%AF%E5%A2%83/</id>
    <published>2020-01-03T03:38:02.000Z</published>
    <updated>2020-01-08T11:41:26.018Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;/download/Docker搭建JavaWeb环境/source.rar&quot;&gt;本教程用到的资源，点击下载&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;CentOS7.5&lt;/li&gt;
&lt;li&gt;必须有root权限&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Docker" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/Docker/"/>
    
    
      <category term="Docker" scheme="https://zgysyy.github.io/tags/Docker/"/>
    
      <category term="Java" scheme="https://zgysyy.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Docker常用命令笔记</title>
    <link href="https://zgysyy.github.io/2020/01/03/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AC%94%E8%AE%B0/"/>
    <id>https://zgysyy.github.io/2020/01/03/Docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AC%94%E8%AE%B0/</id>
    <published>2020-01-03T03:33:45.000Z</published>
    <updated>2020-01-08T11:41:26.017Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用Dockerfile创建镜像&quot;&gt;&lt;a href=&quot;#使用Dockerfile创建镜像&quot; class=&quot;headerlink&quot; title=&quot;使用Dockerfile创建镜像&quot;&gt;&lt;/a&gt;使用Dockerfile创建镜像&lt;/h1&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Docker" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/Docker/"/>
    
    
      <category term="Docker" scheme="https://zgysyy.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令总结</title>
    <link href="https://zgysyy.github.io/2020/01/03/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>https://zgysyy.github.io/2020/01/03/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</id>
    <published>2020-01-03T03:23:37.000Z</published>
    <updated>2020-01-08T11:41:26.019Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;yum常用命令&quot;&gt;&lt;a href=&quot;#yum常用命令&quot; class=&quot;headerlink&quot; title=&quot;yum常用命令&quot;&gt;&lt;/a&gt;yum常用命令&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;yum install 【软件包名】[-y]：安装指定的软件包，如果加上&lt;code&gt;-y&lt;/code&gt;表示不询问安装。&lt;/li&gt;
&lt;li&gt;yum remove 【软件包名】[-y]：删除指定软件包，如果加上&lt;code&gt;-y&lt;/code&gt;表示不询问删除。&lt;/li&gt;
&lt;li&gt;yum list installed：列出所用安装过的软件，可以配合&lt;code&gt;|&lt;/code&gt;和&lt;code&gt;grep&lt;/code&gt;命令做过滤。&lt;/li&gt;
&lt;li&gt;yum list：列出所用软件，可以配合&lt;code&gt;|&lt;/code&gt;和&lt;code&gt;grep&lt;/code&gt;命令做过滤。&lt;/li&gt;
&lt;li&gt;yum search 【软件包名】：查找指定的软件包。&lt;/li&gt;
&lt;li&gt;yum clean all：删除缓存。&lt;/li&gt;
&lt;li&gt;yum update ：更新所用的软件包，如果后面添加【软件包名】就是更新指定的软件包。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="系统" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Linux" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/%E7%B3%BB%E7%BB%9F/Linux/"/>
    
    
      <category term="Linux" scheme="https://zgysyy.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>iptables自定义链</title>
    <link href="https://zgysyy.github.io/2020/01/03/iptables%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE/"/>
    <id>https://zgysyy.github.io/2020/01/03/iptables%E8%87%AA%E5%AE%9A%E4%B9%89%E9%93%BE/</id>
    <published>2020-01-03T03:11:46.000Z</published>
    <updated>2020-01-08T11:41:26.388Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;你可能会问，iptables的默认链就已经能够满足我们了，为什么还需要自定义链呢？&lt;/p&gt;
&lt;p&gt;原因如下：&lt;/p&gt;
&lt;p&gt;当默认链中的规则非常多时，不方便我们管理。&lt;/p&gt;
&lt;p&gt;想象一下，如果INPUT链中存放了200条规则，这200条规则有针对httpd服务的，有针对sshd服务的，有针对私网IP的，有针对公网IP的，假如，我们突然想要修改针对httpd服务的相关规则，难道我们还要从头看一遍这200条规则，找出哪些规则是针对httpd的吗？这显然不合理。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="系统" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="Linux" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/%E7%B3%BB%E7%BB%9F/Linux/"/>
    
    
      <category term="iptables" scheme="https://zgysyy.github.io/tags/iptables/"/>
    
      <category term="Linux" scheme="https://zgysyy.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Webpack详解</title>
    <link href="https://zgysyy.github.io/2020/01/03/Webpack%E8%AF%A6%E8%A7%A3/"/>
    <id>https://zgysyy.github.io/2020/01/03/Webpack%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-01-03T03:02:43.000Z</published>
    <updated>2020-01-08T11:41:26.292Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;nrm工具使用&quot;&gt;&lt;a href=&quot;#nrm工具使用&quot; class=&quot;headerlink&quot; title=&quot;nrm工具使用&quot;&gt;&lt;/a&gt;nrm工具使用&lt;/h1&gt;&lt;p&gt;简述：一个管理镜像源地址的工具。&lt;/p&gt;
&lt;p&gt;安装：&lt;code&gt;npm i nrm -g&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;查看当前使用的镜像源地址：&lt;code&gt;nrm ls&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;切换镜像源地址：&lt;code&gt;nrm use npm&lt;/code&gt;或&lt;code&gt;nrm use taobao&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&quot;什么是webpack&quot;&gt;&lt;a href=&quot;#什么是webpack&quot; class=&quot;headerlink&quot; title=&quot;什么是webpack&quot;&gt;&lt;/a&gt;什么是webpack&lt;/h1&gt;&lt;p&gt;简述：Webpack是一个前端的项目构建工具，是基于node.js开发的一个前段工具。&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="https://zgysyy.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="webpack" scheme="https://zgysyy.github.io/categories/%E5%89%8D%E7%AB%AF/webpack/"/>
    
    
      <category term="Webpack" scheme="https://zgysyy.github.io/tags/Webpack/"/>
    
      <category term="前端" scheme="https://zgysyy.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>TCP三次握手和四次挥手详解</title>
    <link href="https://zgysyy.github.io/2020/01/02/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E8%AF%A6%E8%A7%A3/"/>
    <id>https://zgysyy.github.io/2020/01/02/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-01-02T13:28:23.000Z</published>
    <updated>2020-01-08T11:41:26.096Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;TCP 三次握手和四次挥手的问题在面试中是最为常见的考点之一。很多读者都知道三次和四次，但是如果问深入一点，他们往往都无法作出准确回答。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;TCP-三次握手&quot;&gt;&lt;a href=&quot;#TCP-三次握手&quot; class=&quot;headerlink&quot; title=&quot;TCP 三次握手&quot;&gt;&lt;/a&gt;TCP 三次握手&lt;/h1&gt;&lt;p&gt; TCP 三次握手就好比两个人在街上隔着 50 米看见了对方，但是因为雾霾等原因不能 100% 确认，所以要通过招手的方式相互确定对方是否认识自己。 &lt;/p&gt;
 &lt;img src=&quot;/2020/01/02/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E8%AF%A6%E8%A7%A3/640.gif&quot; class=&quot;&quot;&gt;

&lt;p&gt;张三首先向李四招手(syn)，李四看到张三向自己招手后，向对方点了点头挤出了一个微笑(ack)。&lt;/p&gt;
&lt;p&gt;张三看到李四微笑后确认了李四成功辨认出了自己(进入 estalished 状态)。&lt;/p&gt;
&lt;p&gt;但是李四还有点狐疑，向四周看了一看，有没有可能张三是在看别人呢，他也需要确认一下。&lt;/p&gt;
&lt;p&gt;所以李四也向张三招了招手(syn)，张三看到李四向自己招手后知道对方是在寻求自己的确认。&lt;/p&gt;
&lt;p&gt;于是也点了点头挤出了微笑(ack)，李四看到对方的微笑后确认了张三就是在向自己打招呼(进入 established 状态)。&lt;/p&gt;
&lt;p&gt;于是两人加快步伐，走到了一起，相互拥抱。 &lt;/p&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Java" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/Java/"/>
    
    
      <category term="TCP" scheme="https://zgysyy.github.io/tags/TCP/"/>
    
      <category term="三次握手四次挥手" scheme="https://zgysyy.github.io/tags/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>Disruptor——详解</title>
    <link href="https://zgysyy.github.io/2020/01/02/Disruptor-%E8%AF%A6%E8%A7%A3/"/>
    <id>https://zgysyy.github.io/2020/01/02/Disruptor-%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-01-02T09:48:12.000Z</published>
    <updated>2020-01-08T11:41:25.915Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;资料一（基础概念-简单demo）&quot;&gt;&lt;a href=&quot;#资料一（基础概念-简单demo）&quot; class=&quot;headerlink&quot; title=&quot;资料一（基础概念+简单demo）&quot;&gt;&lt;/a&gt;资料一（基础概念+简单demo）&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;背景&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;高并发是指通过设计保证系统能够同时并行处理很多请求。虽然我在工作中经常听到高并发，QPS之类的术语。其实，我对高并发也是一知半解，知道Java里面可以用Lock，Synchronized，ArrayBlockingQueue之类的来进行高并发的处理。我个人觉得，高并发领域更多的依靠的是经验的累积。今天想跟大家分享的是一个高性能的并发框架Disruptor。&lt;/p&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Java" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/Java/"/>
    
    
      <category term="Disruptor" scheme="https://zgysyy.github.io/tags/Disruptor/"/>
    
      <category term="高效队列" scheme="https://zgysyy.github.io/tags/%E9%AB%98%E6%95%88%E9%98%9F%E5%88%97/"/>
    
      <category term="伪共享" scheme="https://zgysyy.github.io/tags/%E4%BC%AA%E5%85%B1%E4%BA%AB/"/>
    
      <category term="CAS" scheme="https://zgysyy.github.io/tags/CAS/"/>
    
      <category term="DSL" scheme="https://zgysyy.github.io/tags/DSL/"/>
    
      <category term="MESI 协议" scheme="https://zgysyy.github.io/tags/MESI-%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>什么是ZooKeeper</title>
    <link href="https://zgysyy.github.io/2019/12/31/%E4%BB%80%E4%B9%88%E6%98%AFZooKeeper/"/>
    <id>https://zgysyy.github.io/2019/12/31/%E4%BB%80%E4%B9%88%E6%98%AFZooKeeper/</id>
    <published>2019-12-31T09:48:12.000Z</published>
    <updated>2020-01-08T11:41:26.396Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文摘抄自： &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIxMjE5MTE1Nw==&amp;mid=2653193977&amp;idx=1&amp;sn=12319f8cb81f55a40ac461bd0ad9d74e&amp;chksm=8c99f423bbee7d35056ce7ec1b321f33aad15c309de6eba0086cb31a48b975ccb1d695d5a251&amp;mpshare=1&amp;scene=23&amp;srcid=1009q5vbBfA0ssZhVnm61nEd&amp;sharer_sharetime=1570673341100&amp;sharer_shareid=f8be6084b82cc018b018588532bb3fe1#rd&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt; 程序员小灰——什么是ZooKeeper？&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;/2019/12/31/%E4%BB%80%E4%B9%88%E6%98%AFZooKeeper/640.webp&quot; class=&quot;&quot;&gt;
    
    </summary>
    
    
      <category term="后端" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Java" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/Java/"/>
    
      <category term="Zookeeper" scheme="https://zgysyy.github.io/categories/%E5%90%8E%E7%AB%AF/Java/Zookeeper/"/>
    
    
      <category term="Zookeeper" scheme="https://zgysyy.github.io/tags/Zookeeper/"/>
    
      <category term="分布式锁" scheme="https://zgysyy.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
    
      <category term="服务注册与发现" scheme="https://zgysyy.github.io/tags/%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/"/>
    
  </entry>
  
</feed>
